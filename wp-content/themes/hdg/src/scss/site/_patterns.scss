svg#principles {

      width: 100%;

      .protect-people--text, 
      .promote-health--text,
      .prioritise-equity--text {
        font-size: 22px;
        font-weight: 600;
        fill: #000000;
      }

      //Outer text
      .cls-9 {
        font-size: 36px;
        font-weight: 700;
      }

      .protect-people, .promote-health, .prioritise-equity {
        stroke-miterlimit: 10;
      }

      .protect-people {
        fill: #dbc4f2;
        stroke: #611ca6;
      }

      /*Outer and Fill*/
      .protect-people--icon, 
      .protect-people--border {
        fill: #611ca6;
      }

      .prioritise-equity {
        fill: #c0f0c4;
        stroke: #027353;
      }
      
      /*Outer and Fill*/
      .prioritise-equity--icon, 
      .prioritise-equity--border {
        fill: #027353;
      }

      $conditions: (
        'protect-people': #611ca6,
        'promote-health': #4a30f2,
        'prioritise-equity': #027353
      );

      @each $key, $color in $conditions {
        @for $i from 1 through 3 {
          &:has(.#{$key}-path--#{$i}:hover) {
            .#{$key}--#{$i} .#{$key}--icon,  
            .#{$key}--#{$i} .#{$key}--text {
              fill: white;
              color: white;
              transition: none;
            }
            .#{$key}-path--#{$i} {
              fill: $color;
            }
          }
        }
      }


      .promote-health {
        fill: #c9e7f2;
        stroke: #4a30f2;
      }

      /*Outer and Fill*/
      .promote-health--icon, 
      .promote-health--border {
        fill: #4a30f2;
      }

      //Hover
      .promote-health, 
      .protect-people,
      .prioritise-equity {
        &:hover {
          cursor: pointer;
        }
      }
      

      /*Circles*/
      .cls-7 {fill: #025939;}
      .cls-17 {fill: #8b3dd9;}
      .cls-25 {fill: #4a30f2;}
      
      .cls-8, .cls-9 {
        fill: #fff;
      }


}

.restore-button {
  appearance: none;
  text-decoration: none;
  display: inline-block;
  border: 0;
  background-color: transparent;
  &:hover {
    cursor: pointer;
  }
  svg {
    width: toRem(30);
    height: toRem(30);
  }
}

.hdg-grid-cards {
  margin-block: var(--wp--custom--spacing--gap);
  .is-layout-grid {
    display: grid;
    @include mq($from: lg) {
      grid-template-columns: repeat(5, 1fr);
    }
  }
  .hdg-grid-card {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    gap: var(--wp--custom--spacing--sm);
    padding: var(--wp--custom--spacing--gap);
    border-radius: var(--radius);
    p {
      font-size: 90%;
      width: 100%;
      a {
        text-decoration: none;
        &:hover {
          text-decoration: underline;
        }
      }
    }
    svg {
      fill: #7132af;
      width: 3rem;
      height: 3rem;
    }
    @for $i from 1 through 6 { // Adjust the upper limit as needed
      &:nth-child(#{$i}) {
          $color: nth($color-list, ($i - 1) % length($color-list) + 1);
          background-color: $color;
          @if $color == #434d9c {
            p > a {
              color: white;
              &:hover {
                text-decoration-color: white;
              }
            }
            svg {
              fill: white;
              path {
                fill: white;
              }
            }
          } @else if $color == #684998 {
            p > a {
              color: white;
              &:hover {
                text-decoration-color: white;
              }
            }
            svg {
              fill: white;
              path {
                fill: white;
              }
            }
          }
      }
  }
  }
  .wp-block-safe-svg-svg-icon {
    margin-inline: 0 !important;
  }
}